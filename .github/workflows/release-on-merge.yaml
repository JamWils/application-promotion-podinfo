name: Release Docker Container and Helm Chart

on:
  pull_request:
    branches:
      - main
    types:
      - closed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo The PR was merged to main and closed
        echo Running release process

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # important parameter

    - name: Container Version
      id: containerversion
      run: |
        VERSION=$(grep "var VERSION" pkg/version/version.go | sed -e 's/^var VERSION = "//' -e 's/"$//')
        echo "Version is set to ${VERSION}"
        echo ::set-output name=VERSION::${VERSION}

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        labels: ${{ steps.meta.outputs.labels }}
        tags: |
               ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.containerversion.outputs.VERSION  }}

    - name: Configure Git
      run: |
        git config user.name "GitHub Action"
        git config user.email "action@github.com"

    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.7.0

    - name: Run chart-releaser
      uses: helm/chart-releaser-action@v1.4.0
      with:
        charts_dir: charts
        charts_repo_url: https://raw.githubusercontent.com/application-promotion-podinfo/gh-pages/
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
